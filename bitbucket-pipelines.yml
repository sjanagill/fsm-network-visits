#  Template python-build

#  This template allows you to validate your python code.
#  The workflow allows running tests and code linting on the default branch.

image: python:3.8

pipelines:
  default:

    - step:
        name: Checkout code
        script:
          - rm /bin/sh && ln -s /bin/bash /bin/sh && apt-get update && apt-get install -y git
          - python3 -m venv .venv
          - source .venv/bin/activate
          - pip install --upgrade pip
          - pip install --no-cache-dir --timeout 30 -r requirements.txt
          - export PYTHONPATH="${PYTHONPATH}:."

    - step:
        name: Checkout code
        script:
          - git clone https://bitbucket.org/sonikaj/fsm-network-visits.git

    - step:
        name: Install dependencies
        script:
          - ls
          - find ~ -type f -name "*install_requirements*" -print
          - bash install_requirements.sh

    - step:
        name: Run static code checks
        script:
          - bash run_linters.sh
          
    - step:
        name: Run Pytests
        script:
          - pytest cloud_functions/tests/
          
    - step:
        name: Tests coverage
        script:
          - bash coverage.sh

    - step:
        name: Deploy with Terraform
        # Requires Terraform CLI pre-installed
        script:
          - bash deploy.sh

#variables:
#  BITBUCKET_BUILD_NUMBER: $BITBUCKET_BUILD_NUMBER  # Replace with your variable name for build number (optional)
